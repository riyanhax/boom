<!-- /* socket\room_chat\views\chat.ejs */ -->


<html>
<head>
    <title>JickTalk-Room</title>
    <link rel="stylesheet" type="text/css" href="stylesheets/semantic.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" />
		<link rel="stylesheet"
			  href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/0.5.10/css/bootstrap-material-design.min.css"/>
		<link rel="stylesheet"
			  href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/0.5.10/css/ripples.min.css"/>
		<link rel="stylesheet" href="stylesheets/bootstrap-material-datetimepicker.css" />
		<link href='http://fonts.googleapis.com/css?family=Roboto:400,500' rel='stylesheet' type='text/css'>
		<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
		<script src="https://code.jquery.com/jquery-3.1.1.min.js" integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=" crossorigin="anonymous"></script>
		<script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/0.5.10/js/ripples.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/0.5.10/js/material.min.js"></script>
		<!--<script type="text/javascript" src="https://rawgit.com/FezVrasta/bootstrap-material-design/master/dist/js/material.min.js"></script>-->
		<script type="text/javascript" src="http://momentjs.com/downloads/moment-with-locales.min.js"></script>
    <script type="text/javascript" src="javascripts/bootstrap-material-datetimepicker.js"></script>
    <script src="javascripts/semantic.js"></script>
    <script src="javascripts/qrcode.js"></script>
    <script src="http://dmaps.daum.net/map_js_init/postcode.v2.js?autoload=false"></script>  

  <style>
    form {
      background: #000;
      padding: 3px;
      position: fixed;
      bottom: 0;
      width: 100%;
      margin-block-end: 0em;
    }

    form input {
      border: 0;
      padding: 10px;
      width: 70%;
      margin-right: .5%;
      margin-left: 10%;
    }
    #plusbtn{
    float:left;
    background: #ffffff;
    padding: 3px;
    position: fixed;
    height: 30px;
    bottom: 0;
    width: 9%;
    margin-block-end: 0em;
    margin-bottom: 5px;
    margin-left: 5px;
}
    form button {
      width: 15%;
      background: rgb(130, 224, 255);
      border: none;
      padding: 10px;
    }
    .chat-box {
        display: inline-block;
        color: #34495e;
        margin: 0 0 60px 0;
        width:90%;
    }
 
    .chat-box li {
    display: table;
    padding: 13px;
    margin: 7px 10px;
    font-size: 18px;
    line-height: 25px;
    margin-bottom : 5px;
    -webkit-border-top-left-radius: 6px;
    -webkit-border-top-right-radius: 6px;
    -webkit-border-bottom-right-radius: 6px;
    -webkit-border-bottom-left-radius: 6px;
    -moz-border-radius-topleft: 6px;
    -moz-border-radius-topright: 6px;
    -moz-border-radius-bottomright: 6px;
    -moz-border-radius-bottomleft: 6px;
    border-top-left-radius: 6px;
    border-top-right-radius: 6px;
    border-bottom-right-radius: 6px;
    border-bottom-left-radius: 6px;
}
 
.chat-box .odd {
    background-color: #aaaaaa;
    height: auto;
    clear: both;
    float: left;
}

.chat-box .system {
    background-color: black;
    color : white;
    clear: both;
    float: left;
}
 
.chat-box .odd:after {
    content: ' ';
    position: relative;
    top: auto;
    bottom: auto;
    border: 12px solid;
    border-color: transparent transparent #aaaaaa transparent;
    margin: 0 0 0 -24px;
    float: left;
}
 
 
.chat-box .even {
    background-color: #C1E4EC;
    height: auto;
    clear: both;
    float: right;
}
 
.chat-box .even:after {
    content: ' ';
    position: relative;
    bottom: auto;
    border: 12px solid;
    border-color: transparent transparent #C1E4EC transparent;
    margin: 0 -24px 0 0;
    float: right;
}
 
.chat-box li span {
    padding: 0 0 5px;
    color: #7f8c8d;
    display: block;
}

.item {
  font-style : 25px;
}


#talk {
  width:auto;
  height: auto;
}
#input-sets{
  width:auto;
  height: auto;
}
#plusbtn {
  font-size : 10px;
}
#set_address {
  font-size : 15px;
}
.send {
  color : black;
}

  </style>
</head>
<body>
<div id='talk'>
<ul id="messages" class="chat-box">
  <% var list = result%>
  <% var date = datetime%>
  <div id="pro_num" style="display:none;"><%=pro_num%></div>
  <div id="buyer" style="display:none;"><%=buyer%></div>
  <div id="seller" style="display:none;"><%=seller%></div>
  <div id="nickname" style="display:none;"><%=nickname%></div>
  <div id="room_id" style="display:none;"><%=roomid%></div>
  <div id="status" style="display:none;"><%=rstatus%></div>
<%  
var subDate;
  var arr=[];
    var jsonoobj = {};
   list = JSON.parse(list);
   
    for(var i = 0; i < list.rows.length; i++){
      jsonoobj = {
          tnickname : list.rows[i][2],
          tmessage : list.rows[i][4]
      }
      if(jsonoobj.tnickname == nickname){//메시지의 발신자와 입장한 사용자가 동일인이라면
        if(jsonoobj.tmessage.indexOf('시간협의') == 0){
          var end = jsonoobj.tmessage.indexOf('</i><br>');
          var start = jsonoobj.tmessage.indexOf("P'>");
          start = start +3;
          subDate = jsonoobj.tmessage.substring(start,end);
          jsonoobj.tmessage = '<i>상대방에게 시간협의를 제안하셨습니다</i><br><i>'+subDate+'</i>';
        } else if(jsonoobj.tmessage.indexOf('장소협의') == 0){
          var end = jsonoobj.tmessage.indexOf('</i><br>');
          var start = jsonoobj.tmessage.indexOf("P'>");
          start = start +3;
          subDate = jsonoobj.tmessage.substring(start,end);
          console.log(subDate);
          console.log(jsonoobj.tmessage.length);
          jsonoobj.tmessage = '<i>상대방에게 장소협의를 제안하셨습니다</i><br><i>'+subDate+'</i>';
        }
      }
      var realJson = JSON.parse(JSON.stringify(jsonoobj));
      arr.push(realJson);
    }
%>


<%for(var i =0; i<arr.length;i++){ %>
  <%if(arr[i].tnickname == 'System'){%>
    <li class="system"><%=arr[i].tnickname%>  :  <%-arr[i].tmessage%></li>
  <%} else if(arr[i].tnickname == nickname){%>
<li class="even"><%=arr[i].tnickname%>  :  <%-arr[i].tmessage%></li>
<%} else {%>
  <li class="odd"><%=arr[i].tnickname%>  : <%-arr[i].tmessage%></li>
  <%}%>
<%}%>

</ul>

</div>
<div id="input-sets">
<form action="">
  <input id="m" class="nullmenu" autocomplete="off"/>
  <button class="nullmenu">Send</button>
</form>
<div class="ui sidebar inverted vertical menu">
  <a class="item" id='room_out'>
    채팅방 나가기
  </a>
  <a class="item nullmenu"> 
        <input type="button" id="set_address" style="width:100%;white-space: normal;padding-top:5px;text-align:left;" class="item form-control floating-label nullmenu " onclick="sample4_execDaumPostcode()" value="<%=address%>"/>
      <button id="send_address" class="send">전송</button>  
  </a>
  <a class="item nullmenu">  
    <input type="text" id="set_date" class="item form-control floating-label nullmenu"  value="<%=datetime%>">
    <button id="send_date" class="send" >전송</button>
  </a>
    <a class="item nullmenu" id='QRsend'>
    명세서 전달
  </a>
  
  
</div>
<button id="plusbtn"><b>3+2</b></button>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
  $(() => {
    var ref = function(){
      $(document).scrollTop($(document).height());
      window.location.reload();
      $(document).scrollTop($(document).height());
    }
    var road_and_QR = function(){
      var seller = $('#seller').text();
      var buyer = $('#buyer').text();
      var pro_num = $('#pro_num').text();
      for(var i = 0; i < document.getElementsByClassName("qrcode").length; i++){
        var qrcode = new QRCode(document.getElementsByClassName("qrcode")[i], {
        text: "http://39.127.7.47:3000/testQR?pro_num="+pro_num+"&seller="+seller+"&buyer="+buyer,
        width: 350,
        height: 350,
        colorDark : "#000000",
        colorLight : "#ffffff",
        correctLevel : QRCode.CorrectLevel.H
      });
      }
    }

    road_and_QR();   
    var a = $('#status').text();
    $('#set_date').bootstrapMaterialDatePicker({ format : 'YYYY/MM/DD HH:mm', minDate : new Date() });//캘린더 - datePicker를 달아준다.
    
   

    if(a=='out'){
      $('.nullmenu').css("display","none");
    }
    $('#plusbtn').click(function(){
            $('.ui.sidebar').sidebar('setting', 'transition', 'overlay').sidebar('toggle');
        });
    $(document).scrollTop($(document).height()); // 스크롤 가장아래로 내림
    const name = $('#nickname').text();
    const room_id= $('#room_id').text();
    const socket = io();
    let num = room_id;
    let qrCount;
    qrCount = 0;
    socket.emit('joinRoom', num, name);

    socket.on('ref', () => {
      window.location.reload();
    });
    

    $('#send_address').click(function(){
      if($('#set_address').val()=='약속장소 선정'){
        alert('장소를 지정해 주시기 바랍니다.');
        return false;
      }
      alert($('#set_address').val()); // 고른 시간 한번 알려주고
      var address = $('#set_address').val();
      socket.emit('socket_address', num, address, name); //서버로 전송한다.
    });
    socket.on('socket_address', (num, address, name, message_id) => {// 상대방으로부터 채팅방에 소켓데이트 신호가 온다면 실행.
      var buttonSet = "<button class='Ayes'>수락</button><button class='Ano' value="+message_id+">거절</button>";
      if(name==$('#nickname').text()){
        $('#messages').append($('<li class="even">').html(name +' : '+'<i>상대방에게 장소협의를 제안하셨습니다</i><br><i >'+address+'</i>'));//버튼은 상대방에게만 보인다.
      } else{
        $('#messages').append($('<li class="odd">').html(name +' : '+'장소협의 - '+name + '님에 의해 약속장소가 선정되었습니다 :<br><i class="addressP">'+address+"</i><br>"+buttonSet));//시스템메시지 약속지정정보를 보낸다.
      }
      $(document).scrollTop($(document).height()); // 스크롤 가장아래로 내림
    });
    $(document).on("click",".Ayes",function(event){
        alert($(event.target).siblings('.addressP').text());
         var addressP = $(event.target).siblings('.addressP').text();
       alert('약속 :'+addressP+'으로 지정되었습니다.');
       $('#set_address').val(addressP);//제안들중 선택 
      socket.emit('addressYes', addressP,num); //서버로 전송한다.
    });
    $(document).on("click",".Ano",function(event){// 거절버튼 클릭시
      var addressP = $(event.target).siblings('.addressP').text();
      message_id = $(event.target).val();
      alert('클릭된 거절버튼의 메시지 아이디' + message_id + '입니다');
      alert('약속제안 ('+$(event.target).siblings('.addressP').text()+')을 거절하셨습니다.');
      socket.emit('addressNo', addressP,num,message_id); //서버로 전송한다.
    });





    $('#send_date').click(function(){
      if($('#set_date').val()=='약속시간 선정'){
        alert('날짜를 지정해 주시기 바랍니다.');
        return false;
      }
      alert($('#set_date').val()); // 고른 시간 한번 알려주고
      var date = $('#set_date').val();
      socket.emit('socket_date', num, date, name); //서버로 전송한다.
    });

//A가 날짜 전송
//B가 날짜 수신
//B가 수락버튼 클릭
//A,B의 DatePicker의 값이 해당 수락된 날짜로 변경.
    socket.on('socket_date', (num, date, name, message_id) => {// 상대방으로부터 채팅방에 소켓데이트 신호가 온다면 실행.
      var buttonSet = "<button class='yes'>수락</button><button class='no' value="+message_id+">거절</button>";
      if(name==$('#nickname').text()){
        $('#messages').append($('<li class="even">').html(name +' : '+'<i>상대방에게 시간협의를 제안하셨습니다</i><br><i >'+date+'</i>'));//버튼은 상대방에게만 보인다.
      } else{
        $('#messages').append($('<li class="odd">').html(name +' : '+'시간협의 - '+name + '님에 의해 약속일정이 선정되었습니다 :<i class="dateP">'+date+"</i><br>"+buttonSet));//시스템메시지 약속지정정보를 보낸다.
      }
      $(document).scrollTop($(document).height()); // 스크롤 가장아래로 내림
    });
    $(document).on("click",".yes",function(event){
        alert($(event.target).siblings('.dateP').text());
         var dateP = $(event.target).siblings('.dateP').text();
       alert('약속 :'+dateP+'으로 지정되었습니다.');
       $('#set_date').val(dateP);//제안들중 선택 
      socket.emit('dateYes', dateP,num); //서버로 전송한다.
    });
    $(document).on("click",".no",function(event){// 거절버튼 클릭시
      var dateP = $(event.target).siblings('.dateP').text();
      message_id = $(event.target).val();
      alert('클릭된 거절버튼의 메시지 아이디' + message_id + '입니다');
      alert('약속일시 제안 ('+$(event.target).siblings('.dateP').text()+')을 거절하셨습니다.');
      socket.emit('dateNo', dateP,num,message_id); //서버로 전송한다.
    });
    
    var func_qr = function(){
      return func_qrcount();
    }
    var func_qrcount = function(){
      qrCount++;
      var seller = $('#seller').text();
      var buyer = $('#buyer').text();
      var pro_num = $('#pro_num').text();
      var tag = '<div class="qrcode"></div><h2>명세서</h2><br>판매자 :'+seller+'<hr>구매자 :'+buyer+'<hr>상품번호 :'+pro_num+'<hr><i><small>명세서 상세 내용은 QR코드 인증 후 확인 가능합니다.</small></i>';
      socket.emit('QRsend', num,name,tag);
    }
    socket.on('QRsend', (num1, name1, tag1) => {
      if(name1 == name){
        $('#messages').append($('<li class="even"><div class="qrcode"></div>'));
      }else {
        $('#messages').append($('<li class="odd"><div class="qrcode"></div>'));
      }
      return ref();
    });
    
    //1. qr가 들어갈 div를 생성.
    //2. div의 클래스 중 qrcount번째 객체에 qr코드생성
    //3. qrcount++;
    //4. 넘어왔을때. 아니 QR코드화 또한 어떻게 하지. 왜 낫띵클릭하면 메시지 append하잖아 그때 db에 저장을 하자. 단 QR코드 보낼때 생성되어지는 div에 우리가 넣을려고 하는 값들:(구매자판매자상품번호가격등등)도 넣는다.
    $('#QRsend').click(function(){// 아무것도 아닌 추가기능을 실행하면 일단 귀여운 강아지 보여줌 ㅎㅎ
      $('#messages').append($('<li class="even"><div class="qrcode"></div><img src="images/dog4.png" width="300px" height="300px">'));
        $(document).scrollTop($(document).height()); // 스크롤 가장아래로 내림
      //socket의 emit()함수가 없어서 전송도 안됨 ㅎㅎ
      return func_qr();
    });

    $('#room_out').click(function(){
      console.log('Room Out // no.'+num+' room //left user name : ', name );
        if (confirm("채팅내역도 함께 삭제됩니다. 정말 나가시겠습니까?") == true){    //확인
          socket.emit('room_out', num, name);
        console.log('회원 '+name+'님이 방나가기 실행을 수락하셨습니다.');
        window.close();
        }else{   //취소
          console.log('회원 '+name+'님이 탈주 취소하셨습니다!');
        return false;
      }
      
    });
    socket.on('room_out', (num, name) => {// 소켓에 room_out신호가 온다면
      $('.nullmenu').css("display","none");//상대방이 없다면 사용불가의 메뉴:입력태그, send버튼, 채팅방나가기를 제외한 추가기능들을 안보이게한다.
      $('#messages').append($('<li class="system">').text('System : '+name + ' 회원님이 방을 탈주하셨습니다.  ' ));//시스템메시지 상대방이 나갔다고 알려준다.
      $('#status').text = 'out';//방의 상태를 out으로 지정
      window.location.search='?room_id='+num+'&talker=out';//url의 queryString도 나갔다고 바꿔준다. 새로고침이 되어도 out값을 가지기에 .nullMenu들이 여전히 안보여진다.
    } );
    var i = 0;
    $('form').submit(() => {// Enter칠때마다 Send 할때마다 실행
      if($('#m').val()==""){
        alert('공백을 전송할 수 없습니다.');
        return false;
      }else{
      socket.emit('chat message', num, name, $('#m').val());// 서버로  작성자, 방번호, 메시지를 전달한다.
      $(document).scrollTop($(document).height()); // 스크롤 가장아래로 내림
      $('#m').val('');//입력창 비워주기
      return false;
    } //원하는 작업만 마친 후 submit의 동작을 멈춘다.
    });

    /* API 좀더 참조해야함. seller_num, buyer_num, room_id, c_address, c_date, pro_num과 pro_num에 해당하는 production 테이블의 모든 컬럼들을 뿌려준다.
    구매자 닉네임, 판매자 닉네임, 가격, 약속장소 또는 지정직플레이스, 약속시간, ,  
    socket.on('chat QR', (name, ) => {// 채팅방테이블의 pro_num, seller_num, buyer_num을 전송한다.???????????????????????????????????
      $('#messages').append($('<li class="even">').text(name + '  :  ' +
        msg));
        
    });*/ 

    
    socket.on('chat message', (name, msg) => {// 소켓에 신호가 오면 chat message 기능 실행.
      if(name == $('#nickname').text()){//날아온 메시지의 이름이 세션의 닉네임과 같다면
      $('#messages').append($('<li class="even">').text(name + '  :  ' +
        msg));}//우측에 위치한다. 내가쓴메시지
      else{//아니라면 좌측에 위치한다. 남이쓴메시지
        $('#messages').append($('<li class="odd">').text(name + '  :  ' +
        msg));
      }
        
        console.log('chat message' + name + msg);
        $(document).scrollTop($(document).height()); // 스크롤 가장아래로 내림


    });

  });
  function sample4_execDaumPostcode() {
  daum.postcode.load(function(){
          new daum.Postcode({
            oncomplete : function(data) {
              // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.
              // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
              // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
              var addr;
              var roadAddr = data.roadAddress; // 도로명 주소 변수
              var extraRoadAddr = ''; // 참고 항목 변수



              // 법정동명이 있을 경우 추가한다. (법정리는 제외)
              // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
              if (data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {
                extraRoadAddr += data.bname;
              }
              // 건물명이 있고, 공동주택일 경우 추가한다.
              if (data.buildingName !== '' && data.apartment === 'Y') {
                extraRoadAddr += (extraRoadAddr !== '' ? ', '
                    + data.buildingName : data.buildingName);
              }
              // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
              if (extraRoadAddr !== '') {
                extraRoadAddr = ' (' + extraRoadAddr + ')';
              }
              if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                    addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                    addr = data.jibunAddress;
                }
              // 우편번호와 주소 정보를 해당 필드에 넣는다.
              //document.getElementById('zip_code').value = data.zonecode;
              //document.getElementById("set_address").value = roadAddr;
              document.getElementById("set_address").value = addr;

              

              
            }
          }).open();
       
      }); }
</script>

</body>
</html>